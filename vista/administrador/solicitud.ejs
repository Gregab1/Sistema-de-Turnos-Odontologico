<!DOCTYPE html>
<html>

<head>
<title>Solicitudes</title>
  <base target="_top">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <style>
    .bg-custom {
      background-color: #f5f5f5;
    
    }



    #modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
      background-color: #F5F5F5;
      margin: 3% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 90%;
    }

    .men {
      color: red;
      display: none;
    }

    .titulo {
      text-align: center;
      color: grey;
    }

    .form-control,
    btn {
      border: none;
      outline: none;
      border-radius: 15px;
      padding: 0.5em;
      background-color: #ccc;
      box-shadow: inset 2px 5px 10px rgba(0, 0, 0, 0.1);
      transition: 300ms ease-in-out;
    }

    .form-control:focus {
      background-color: white;
      transform: scale(1);
      box-shadow: 13px 13px 100px #969696,
        -13px -13px 100px #ffffff;
    }

    .input-container {
      position: relative;
      display: flex;
      margin: 0 auto;
      height: 2.8rem;
      width: 100%;
      max-width: 700px;
      /* Incrementa el ancho máximo del contenedor */
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
      margin-bottom: 20px;
    }

    .input-container input {
      flex-grow: 1;
      border: 1px solid rgb(176, 190, 197);
      border-radius: 8px;
      padding: 0.625rem;
      font-size: 0.875rem;
      color: rgb(69, 90, 100);
      outline: none;
      transition: border-color 0.15s ease-in-out;
    }

    .invite-btn {
      position: absolute;
      width: 150px;
      /* Incrementa el ancho del botón */
      right: 4px;
      top: 4px;
      bottom: 4px;
      border-radius: 4px;
      background-color: #5882FA;
      color: #fff;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
      border: none;
      transition: 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .invite-btn:hover {
      right: 2px;
      top: 2px;
      bottom: 2px;
      border-radius: 8px;
    }

    .input-container input:placeholder-shown~.invite-btn {
      pointer-events: none;
      background-color: gray;
      opacity: 0.5;
    }

    .mayuscula {
      text-transform: capitalize;
    }

    .mover {
      color: blue;
    }

    .barra {
      background-color: #dedddc;
      padding-bottom: 8px;
      margin-bottom: 3rem;
    }

    h1 {
      text-align: center;

    }

    p {
      color: blue;
      text-align: center;
      font-size: 1rem;
    }

    .mensajeria {
     text-align:center;
      
      color:red;

    }
    .retro{
      margin-left:2rem;
      padding-top:2rem;
     
    }

  </style>
</head>

<body>
  <div class="barra">
    <div class="retro">
        <a href="/administrador/odontologia"><button class="btn btn-outline-success" > Volver</button></a>


    </div>
    <div class="letra">
      <h1>Solicitudes de Turnos a Definir<h1>
    </div>
  </div>


  <div id="modal">
    <div class="modal-content">

      <h2>Gestion de turno</h2>
      <h3>ver turnos asignados por fecha</h3>
      <div class="input-container">

        <input type="date" class="form-control bg-custom" id="fecha" name="fecha">
        <button id="btn-mostrar" class="invite-btn"onclick="obtenerDatosObjeto()">Mostrar Resultados</button>


      </div>
       <div id="contadorPacientes" style="font-weight: bold; "></div>
      <table id="tabla-resultados" class="table table-striped table-bordered"></table>
      <p id="no-turnos-message" style="display:none; color:red;">No hay turnos asignados para esa fecha.</p>
      <form id="edit-form"  class="informacion">

     


        <div class="container text-center">

          <div class="row">

            <div class="col">
              <label for="fotDni" class="form-label">Estado</label>
              <select class="form-select bg-custom " aria-label="Default select example" id="Estado" name="Estado" required>
                  <option>--</option>
                  <option value="asignado">Asignado</option>
                  
                  
                </select>
            </div>

            <div class="col">
              <label for="fNac">Fecha   Asignada</label>
              <input type="date" class="form-control bg-custom" id="fasig" name="fasig" required>
            </div>
            <div class="col">
              <label for="hNac">Hora Asignada</label>
              <input type="time" class="form-control bg-custom" id="hasig" name="hasig" required>
            </div>
          </div>
        </div>


        <div class="modal-footer">
          <input class="btn btn-success" id="submitBtn" type="submit" name="cu" value="Cargar Datos" style="margin: 0;" disabled>
          <button class="btn btn-secondary" type="button" id="close-btn">Cerrar</button>
        </div>
      </form>
    </div>
  </div>


  <div id="loadingMessage"  style="text-align: center; font-size: 1.2em;">
    Cargando datos y actulizando, por favor espere...
  </div>

  <!-- Tabla de datos que estará vacía inicialmente -->
   <div id="dataTable" style="display: none;">
    <table class="table table-primary">
      <thead>
       


        <tr class="table-light">
          <th>code</th>
          <th>Nombre</th>
                    <th>Apellido</th>
                    <th>DNI</th>
                    <th>Tipo de Turno</th>
                    <th>Estado Turno</th>
                    <th>Fecha</th>
                    <th>Hora</th>
                    <th></th>
        </tr>
      </thead>
      <tbody class="table-group-divider">
        <% if (pacientes.length> 0) { %>
            <% pacientes.forEach(paciente=> { %>
                <tr>
                  <td>
                    <%= paciente.id %>
                </td>
                    <td>
                        <%= paciente.nombre %>
                    </td>
                    <td>
                        <%= paciente.apellido %>
                    </td>
                    <td>
                        <%= paciente.dni %>
                    </td>
                    <td>
                        <%= paciente.tipoTurnos %>
                    </td>
                    <td>
                        <%= paciente.estado %>
                    </td>
                    <td>
                        <%= paciente.fecha %>
                    </td>
                    <td>
                        <%= paciente.hora %>
                    </td>
                     <td>
                       
                    </td>
                    <td><button class="btn btn-success edit-btn" data-code=<%= paciente.id %>>Definir Turno</button></td>
                </tr>
                <% }); %>
                    <% } else { %>
                        <tr>
                            <td class="mensajeria" colspan="7">No hay pacientes registrados</td>
                        </tr>
                        <% } %>
    </tbody>
    </table>
  </div>
  <script>

  setTimeout(()=>{

     document.getElementById("loadingMessage").style.display = "none";
    document.getElementById("dataTable").style.display = "block"; 

  },2000);
  document.getElementById("submitBtn").addEventListener("click", function () {
    document.getElementById("loadingMessage").style.display = "block"; 
    setTimeout(() => {
      document.getElementById("loadingMessage").style.display = "none"; 
        location.reload();
    }, 1000); 
});
   
    
     function obtenerDatosObjeto() {
      var fecha = document.getElementById('fecha').value;
      console.log("manda esta fecha"+fecha);
      const listaFecha= <%-JSON.stringify(pacientesAsig)%>;
      console.log("estos son los asignados",listaFecha);
const ListaF=[];
      for(const pacienteA of listaFecha){
        if(pacienteA.fecha===fecha){
          ListaF.push(pacienteA)
        }
      }
     
      agregarResultadoALista(ListaF)
    }
  
    
   
   
  

   function agregarResultadoALista(data) {
  console.log("llega" + data);
  
    
  const resultsTable = document.getElementById('tabla-resultados');
   const noTurnosMessage = document.getElementById('no-turnos-message');
   const noContador=document.getElementById('contadorPacientes')
  resultsTable.innerHTML = ''; // Limpiar la tabla antes de agregar nuevos datos
  noTurnosMessage.style.display = 'none'; // Ocultar el mensaje si hay datos

  if (data) {
    
    noContador.style.display='block';
    var resultado =data;
if (resultado.length === 0) {
      noTurnosMessage.style.display = 'block';
      noContador.style.display='none';

      return; 
    }
   
    resultsTable.innerHTML += `
      <thead>
        <tr>
          <th>Fecha del Turno</th>
    <th>Hora del Turno</th>
          <th>Tipo de Turno</th>
       
        </tr>
      </thead>
      <tbody>
    `;
let contadorPacientes = 0;
   
    resultado.forEach(paciente => {
      var Nombre = paciente.nombre;
      var Apellido = paciente.apellido;
      var Dni = paciente.dni;
      var Domicilio = paciente.domicilio;
      var Distrito = paciente.distrito;
      var Mail = paciente.correo;
      var Telefono = paciente.telefono;
      var FecNac = paciente.fNac
      var TipoT = paciente.tipoTurnos;
      var Fecha = paciente.fecha;
      var Hora = paciente.hora;
      var Estado = paciente.estado;
      
      contadorPacientes++;

      resultsTable.innerHTML += `
        <tr>
          <td>${Fecha}</td>
          <td>${Hora}</td>
          <td>${TipoT}</td>
        
        </tr>
      `;
    });
    document.getElementById("contadorPacientes").innerText = `Total de pacientes para fecha Solicitada: ${contadorPacientes}`;

    resultsTable.innerHTML += '</tbody>';
  }

 
}

// Evento del botón "Mostrar Resultados"
    document.getElementById('btn-mostrar').addEventListener('click', async () => {
    const datosObjeto = await obtenerDatosObjeto();
    if (datosObjeto) {
      mostrarResultados(datosObjeto);
    } 
    });
    // Función para mostrar la lista de resultados
    function mostrarResultados(datos) {
      agregarResultadoALista(datos);
    }



   
  



        document.addEventListener('click', (event) => {
    if (event.target.classList.contains('edit-btn')) {

    var   id = event.target.getAttribute('data-code');
     
      console.log("Este es el id que me llega del botón: "+ id );
    
      const pacientes = <%-JSON.stringify(pacientes)%>;
      
      console.log("Pacientes cargados: ", pacientes);

      
  


    const paciente = pacientes.find(paciente => paciente.id === id);

    if (paciente) {
      console.log("¡ID encontrado! Paciente: ", paciente);
      mostrarModalEdicion(paciente, event.target.closest('tr'));
    } else {
      console.log("No se encontró ningún paciente con este ID.");
    }
  }
  }); 
   
 // Evento para cerrar el modal
  document.getElementById('close-btn').addEventListener('click', () => {
    modal.style.display = 'none';
  });
function mostrarModalEdicion(paciente, fila) {
  console.log("Datos del paciente enviados al modal: ", paciente);

  
  const { estado, fecha, hora } = paciente;

  // Llenar los campos del formulario en el modal
  document.getElementById('Estado').value = estado;
  document.getElementById('fasig').value = fecha;
  document.getElementById('hasig').value = hora;

  // Mostrar el modal
  const modal = document.getElementById('modal'); 
  modal.style.display = 'block';

 

 
  document.getElementById('edit-form').addEventListener('submit', (event) => {
    event.preventDefault(); 

    
    paciente.estado = document.getElementById('Estado').value;
    paciente.fecha = document.getElementById('fasig').value;
    paciente.hora = document.getElementById('hasig').value;

    
    fila.querySelector('td:nth-child(6)').textContent = paciente.estado;
    fila.querySelector('td:nth-child(7)').textContent = paciente.fecha;
    fila.querySelector('td:nth-child(8)').textContent = paciente.hora;

    // Cerrar el modal
    modal.style.display = 'none';

   
    fetch(`/pacientes/${paciente.id}`, {
  method: 'PUT',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify(paciente),
})
      .then((response) => {
        if (response.ok) {
          console.log("Datos actualizados en el servidor correctamente.");
          const celdaPenultima = fila.querySelector('td:nth-last-child(2)'); 
          celdaPenultima.innerHTML = '<p>Turno Asignado</p>'; 
        } else {
          console.error("Error al actualizar los datos en el servidor.");
        }
      })
      .catch((error) => {
        console.error("Error al enviar los datos actualizados:", error);
      });
  });
}

    document.addEventListener('DOMContentLoaded',(event)=>{
        const form = document.querySelector('.informacion');
        const submitBtn = document.getElementById('submitBtn');
        const entradas = form.querySelectorAll('input[required], select[required]');
        function checkForm() {
            let completo = true;
            entradas.forEach(field => {
                if (
                    !field.value ||
                    (field.tagName === 'SELECT' && field.value === '--') // Verifica que los selectores tengan una opción válida
                    
                  
                    
                ) {
                    completo = false;
                }
                
            });
            submitBtn.disabled = !completo;
 
        }
         entradas.forEach(field => {
            field.addEventListener('input', checkForm);
        });


    })
    
       function hideButton() {
      document.getElementById('submitBtn').style.display = 'none';
    } 
       
  </script>
</body>

</html>